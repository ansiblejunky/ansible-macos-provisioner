

- name: wget
  homebrew:
    name: wget
    state: present
- name: httpie - better alternative to curl and wget https://httpie.org/
  homebrew:
    name: httpie
    state: present

- name: bash-completion - handles completion of many commandline tools
  homebrew:
    name: bash-completion
    state: present

- name: Amazon Web Services (AWS)
  block:
    - name: awscli - aws command line interface https://github.com/aws/aws-cli
      homebrew:
        name: awscli
        state: present
    - name: awsebcli - aws elastic beanstalk cli https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/eb-cli3-install-osx.html
      homebrew:
        name: awsebcli
        state: present



- name: jq - json processor https://stedolan.github.io/jq/
  homebrew:
    name: jq
    state: present


# Conference and Chat Tools
# --------------------------------------------------------
- name: Conference Tools - Webex Meetings
  homebrew_cask:
    name: webex-meetings
    state: present

- name: Conference Tools - Zoom conference
  homebrew_cask:
    name: zoomus
    state: present

- name: Conference Tools - Slack
  homebrew_cask:
    name: slack
    state: present
    install_options: force

- name: Conference Tools - Microsoft Teams
  homebrew_cask:
    name: microsoft-teams
    state: present

- name: Conference Tools - Google Chat
  homebrew_cask:
    name: google-chat
    state: present

- name: Conference Tools - Whatsapp
  homebrew_cask:
    name: whatsapp
    state: present


- name: jenv - manage separate java environments
  homebrew:
    name: jenv
    state: present

- name: java
  homebrew_cask:
    name: java
    state: present


# Python App Development Using Kivy (for iOS, OS X, Android, etc) https://kivy.org
# --------------------------------------------------------
# prerequisites
# brew install pkg-config sdl2 sdl2_image sdl2_ttf sdl2_mixer gstreamer
# install Cython and Kivy using pip
# pip install Cython==0.26.1
# pip install https://github.com/kivy/kivy/archive/master.zip

# - name: Maven
#   block:
#     - name: java (pre-requisite)
#       homebrew_cask:
#         name: java
#         state: present

#     - name: maven
#       homebrew:
#         name: maven
#         state: present

- name: Document Management - office suite
  homebrew_cask:
    name: libreoffice
    state: present

- name: Document Management - epub and pdf reader
  homebrew_cask:
    name: calibre
    state: present

# general document converter - http://pandoc.org/
#brew install pandoc
# pdfconvert - convert documents to pdf using Libre Office
# https://ask.libreoffice.org/en/question/12084/how-to-convert-documents-to-pdf-on-osx/
# example:
#pdfconvert <path+file>
## create script for easy use:
#cat <<EOF > /usr/local/bin/pdfconvert
##!/bin/bash
#/Applications/LibreOffice.app/Contents/MacOS/soffice --headless --convert-to pdf "\$@"
#EOF
#chmod +x /usr/local/bin/pdfconvert

# pdfmerge - merge pdf files
# http://gotofritz.net/blog/howto/joining-pdf-files-in-os-x-from-the-command-line/
# example:
# pdfmerge -o PATH/TO/YOUR/MERGED/FILE.pdf /PATH/TO/ORIGINAL/1.pdf /PATH/TO/ANOTHER/2.pdf /PATH/TO/A/WHOLE/DIR/*.pdf
# create symbolic link for easy use
#ln -s /System/Library/Automator/Combine\ PDF\ Pages.action/Contents/Resources/join.py /usr/local/bin/pdfmerge
#chmod +x /usr/local/bin/pdfmerge


# Python App Development Using Kivy (for iOS, OS X, Android, etc) https://kivy.org
# --------------------------------------------------------
# prerequisites
# brew install pkg-config sdl2 sdl2_image sdl2_ttf sdl2_mixer gstreamer
# install Cython and Kivy using pip
# pip install Cython==0.26.1
# pip install https://github.com/kivy/kivy/archive/master.zip


- name: Download manager
  homebrew_cask:
    name: leech
    state: present

- name: Archive manager
  homebrew_cask:
    name: izip
    state: present

- name: Disk image burner - https://www.balena.io/etcher/
  homebrew_cask:
    name: balenaetcher
    state: present

- name: Password manager
  homebrew_cask:
    name: macpass
    state: present

- name: Database manager - beekeeper - open source sql editor - https://www.beekeeperstudio.io/
  homebrew_cask:
    name: beekeeper-studio
    state: present

# Media Tools
# --------------------------------------------------------
- name: Media Tools - Video Transcoders - handbrake
  homebrew_cask:
    name: handbrake
    state: present

- name: Media Tools - Video Transcoders - handbrake dependency - libdvdcss
  homebrew:
    name: libdvdcss
    state: present

- name: Media Tools - vlc
  homebrew_cask:
    name: vlc
    state: present

- name: Media Tools - youtube-dl
  homebrew:
    name: youtube-dl
    state: present

- name: Media Tools - spotify
  homebrew_cask:
    name: spotify
    state: present


- name: Mac App Store - Management Tool - https://github.com/mas-cli/mas
  homebrew:
    name: mas
    state: present
- name: Install Magnet from Mac App Store
  shell: mas install 441258766
  register: results
  changed_when: "'already installed' not in results.stdout"
- name: Install Monosnap from Mac App Store
  shell: mas install 540348655
  register: results
  changed_when: "'already installed' not in results.stdout"
- name: Install CopyClip from Mac App Store
  shell: mas install 595191960
  register: results
  changed_when: "'already installed' not in results.stdout"

- name: Application Management - appcleaner
  homebrew_cask:
    name: appcleaner
    state: present

# Extras
# --------------------------------------------------------
# TODO: Configure itsycal
# TODO: Remove system clock in menu bar
- name: Calendar Menu Bar - http://www.mowglii.com/itsycal/
  homebrew_cask:
    name: itsycal
    state: present

- name: keyboard-lock to allow cleaning your keyboard
  homebrew_cask:
    name: keyboard-lock
    state: present

# Allows automation of configuring your docked items on your Mac
- name: dockutil - Manage OSX Dock Items - https://github.com/kcrawford/dockutil
  homebrew:
    name: dockutil
    state: present

- name: tree
  homebrew:
    name: tree
    state: present
    
- name: Backup - duplicati
  homebrew_cask:
    name: duplicati
    state: present

# DevOps
# --------------------------------------------------------
- name: IDE Tools - Visual Studio Code
  homebrew_cask:
    name: visual-studio-code
    state: present
- name: virtualbox
  homebrew_cask:
    name: virtualbox
    state: present
- name: vagrant
  homebrew_cask:
    name: vagrant
    state: present
- name: vagrant-completion
  homebrew:
    name: vagrant-completion
    state: present
- name: install vagrant plugins
  shell: vagrant plugin install vagrant-hostmanager vagrant-list vagrant-registration vagrant-scp vagrant-vbguest
- name: packer
  homebrew:
    name: packer
    state: present
- name: packer-completion
  homebrew:
    name: packer-completion
    state: present
- name: packer
  homebrew_cask:
    name: docker
    state: present
- name: packer
  homebrew:
    name: docker-completion
    state: present
- name: iterm2
  homebrew_cask:
    name: iterm2
    state: present
- name: Postman
  homebrew_cask:
    name: postman
    state: present

- name: Google Chrome
  homebrew_cask:
    name: google-chrome
    state: present
- name: Google Chrome Driver (for automating browser tasks)
  homebrew_cask:
    name: chromedriver
    state: present

# NOTE: Note that after brew installs Docker, the docker command (symbolic link) is not available at /usr/local/bin. Running the Docker app for the first time creates this symbolic link.
# install phantomjs - headless browser used for automation
#brew install phantomjs

# NOTE: Probably better to create docker container with Gogs running
# https://hub.docker.com/r/gogs/gogs/


# Network Scanner
# --------------------------------------------------------
#brew cask install angry-ip-scanner

# Red Hat OpenShift
# --------------------------------------------------------
# install minishift
#brew cask install minishift
# start minishift environment
#minishift start --vm-driver=virtualbox



# Other
# --------------------------------------------------------
# create custom folders
#mkdir ~/Projects
# TODO: add folders to favorite side-bar in Finder
